#!/bin/sh

# Licensed under ISC by TFBC, published at
# https://github.com/thatfatblackcat/automutt

smtpsetup() {
cat << __EOF__
account $FROM
from ${FROM:-$NAME}
user ${NAME:-$FROM}
host ${SMTP:-${FROM#*@}}
port 465
auth on
passwordeval "$AUTH"
tls on
tls_starttls off

# -- $FROM

__EOF__
}

imapsetup() {
cat << __EOF__
IMAPStore $FROM-server
User ${NAME:-$FROM}
Host ${IMAP:-${FROM#*@}}
Port 993
AuthMechs LOGIN
PassCmd "$AUTH"
SSLType IMAPS

MaildirStore $FROM-client
Inbox "$DATA/maildir/INBOX"
Path "$DATA/maildir/"
SubFolders Verbatim

Channel $FROM
Master :$FROM-server:
Slave :$FROM-client:
Create Both
Expunge Both
Remove Both
Patterns * !"[Gmail]/All Mail"
SyncState *

# -- $FROM

__EOF__
}

pop3setup() {
cat << __EOF__
account $FROM
user ${NAME:-$FROM}
host ${POP3:-${FROM#*@}}
port 995
delivery maildir $DATA/maildir/INBOX
auth on
passwordeval "$AUTH"
tls on
tls_starttls off

# -- $FROM

__EOF__
}

mailsetup() {
cat << __EOF__
alias me $FROM ${REAL:+($REAL)}

set from = "$FROM"
set hostname = "${FROM#*@}"
set realname = "${REAL}"

set sendmail = "msmtp -a $FROM"
set pgp_default_key = "$FROM"

set folder = $DATA/maildir
set header_cache = $DATA/headers

set postponed = +Drafts
set record = +Sent
set spoolfile = +INBOX

unmailboxes *

mailboxes =Archive
mailboxes =Junk
mailboxes =Trash

mailboxes =Drafts
mailboxes =Sent
mailboxes =INBOX
__EOF__
}

muttsetup() {
cat << __EOF__
source $CONF/mutt/gpg.rc
source $CONF/mutt/config

color indicator bold white default
color status bold black white

bind attach h exit
bind attach j next-entry
bind attach k previous-entry
bind attach l view-mailcap

bind browser h exit
bind browser j next-entry
bind browser k previous-entry
bind browser l select-entry

bind index h exit
bind index j next-entry
bind index k previous-entry
bind index l display-message

bind pager h exit
bind pager j next-line
bind pager k previous-line
bind pager l view-attachments

set mbox_type = Maildir
set sleep_time = 0

auto_view text/html
__EOF__
}

hooksetup() {
cat << __EOF__
# ++ $FROM

folder-hook "$DATA/" "source $DATA/account"
set folder = $DATA/maildir
set spoolfile = +INBOX

# -- $FROM

__EOF__
}

mimesetup() {
cat << __EOF__
text/html; elinks -dump; copiousoutput;
application/*; zathura %s > /dev/null 2>&1;
audio/*; mpv --shuffle %s > /dev/null 2>&1;
image/*; sxiv -p -a -r %s > /dev/null 2>&1;
video/*; mpv --shuffle %s > /dev/null 2>&1;
__EOF__
}

gpg2setup() {
	curl -Ls https://gitlab.com/muttmua/mutt/raw/stable/contrib/gpg.rc
}

authsetup() {
	until [ -n "$PASS" ] && [ "$PASS" = "$TEST" ]
	do
		echo 1>&2 "Enter password for $FROM:"
		PASS=$(bash -c 'read -rs; echo $REPLY') || read -r PASS
		echo 1>&2 "Check password for $FROM:"
		TEST=$(bash -c 'read -rs; echo $REPLY') || read -r TEST
	done

	until echo "$PASS" | gpg2 -er "$FROM" 2>/dev/null
	do
		echo 1>&2 'Generate a key pair using (9) ECC and ECC, Curve 25519.'
		echo 1>&2 'Enter the name you would generally use on the internet.'
		echo 1>&2 'Finally, set your public key to never expire. (MANPAGE)'
		gpg2 --no-greeting --full-gen-key > /dev/null
	done
}

create() {
	mkdir -p "$DATA"/headers "$DATA"/maildir \
		"$CONF"/mutt "$CONF"/isync "$CONF"/mpop "$CONF"/msmtp

	[ -f "$HOME"/.mailcap ] || mimesetup > "$HOME"/.mailcap
	[ -f "$CONF"/mutt/gpg.rc ] || gpg2setup > "$CONF"/mutt/gpg.rc
	[ -f "$CONF"/mutt/muttrc ] || muttsetup > "$CONF"/mutt/muttrc
	[ -f "$DATA"/account ] || mailsetup > "$DATA"/account
	[ -f "$DATA"/tokenid ] || authsetup > "$DATA"/tokenid

	imapsetup >> "$CONF"/isync/config
	pop3setup >> "$CONF"/mpop/config
	smtpsetup >> "$CONF"/msmtp/config
	hooksetup >> "$CONF"/mutt/config
}

delete() {
	sed -i "/$FROM/{:a;N;/# -- $FROM/!ba;N;d}" "$CONF"/isync/config
	sed -i "/$FROM/{:a;N;/# -- $FROM/!ba;N;d}" "$CONF"/mpop/config
	sed -i "/$FROM/{:a;N;/# -- $FROM/!ba;N;d}" "$CONF"/msmtp/config
	sed -i "/$FROM/{:a;N;/# -- $FROM/!ba;N;d}" "$CONF"/mutt/config
}

notify() {
	if [ "$n" -gt 0 ]
	then
		[ "$(uname)" != 'Darwin' ] && notify-send "$1" "$2" ||
			osascript -e "display notification \"$2\" with title \"$1\""
	fi
}

update() {
	mbsync -c "$CONF"/isync/config "$FROM"
	n="$(find "$DATA"/maildir -path '*/new/*' | wc -l)"
	notify "$FROM" "You have $n new mails"
}

while getopts 'a:d:y:u:s:i:p:' o
do
	case $o in
		a) FROM=$OPTARG && EXEC=a ;;
		d) FROM=$OPTARG && EXEC=d ;;
		y) FROM=$OPTARG && EXEC=y ;;
		n) REAL=$OPTARG ;;
		u) NAME=$OPTARG ;;
		s) SMTP=$OPTARG &&
			IMAP=${IMAP:-$(echo "$OPTARG" |
				sed 's/smtp/imap/g')} &&
			POP3=${POP3:-$(echo "$OPTARG" |
				sed 's/smtp/pop3/g')} ;;
		i) IMAP=$OPTARG &&
			SMTP=${SMTP:-$(echo "$OPTARG" |
				sed 's/imap/smtp/g')} &&
			POP3=${POP3:-$(echo "$OPTARG" |
				sed 's/imap/pop3/g')} ;;
		p) POP3=$OPTARG &&
			SMTP=${SMTP:-$(echo "$OPTARG" |
				sed 's/pop3/smtp/g')} &&
			IMAP=${IMAP:-$(echo "$OPTARG" |
				sed 's/pop3/imap/g')} ;;
	esac
done 2>/dev/null

DATA="/var/mail/${FROM%%@*}_${FROM##*@}"
AUTH="gpg2 -d $DATA/tokenid 2>/dev/null"
CONF="${XDG_CONFIG_HOME:-$HOME/.config}"

case $EXEC in
	a) create ;;
	d) delete ;;
	y) update ;;
esac
